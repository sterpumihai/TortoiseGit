<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 SYSTEM "../../../dtd/dblite.dtd">

<sect2 lang="en" id="git-fsmonitor&#45;&#45;daemon(1)">
    <title>git-fsmonitor&#45;&#45;daemon(1)</title>
    <date>2024-07-02</date>
<revhistory><revision><date>2024-07-02</date></revision></revhistory>
<indexterm>
<primary>git-fsmonitor&#45;&#45;daemon(1)</primary>
</indexterm>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__name">
<title>NAME</title>
<simpara>git-fsmonitor--daemon - A Built-in Filesystem Monitor</simpara>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__synopsis">
<title>SYNOPSIS</title>
<blockquote>
<literallayout><emphasis>git fsmonitor&#45;&#45;daemon</emphasis> start
<emphasis>git fsmonitor&#45;&#45;daemon</emphasis> run
<emphasis>git fsmonitor&#45;&#45;daemon</emphasis> stop
<emphasis>git fsmonitor&#45;&#45;daemon</emphasis> status</literallayout>
</blockquote>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__description">
<title>DESCRIPTION</title>
<simpara>A daemon to watch the working directory for file and directory
changes using platform-specific filesystem notification facilities.</simpara>
<simpara>This daemon communicates directly with commands like <emphasis>git status</emphasis>
using the <ulink url="https://www.kernel.org/pub/software/scm/git/docs/technical/api-simple-ipc.html"><citetitle>simple IPC</citetitle></ulink> interface
instead of the slower <xref linkend="githooks(5)" /> interface.</simpara>
<simpara>This daemon is built into Git so that no third-party tools are
required.</simpara>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__options">
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term>
start
</term>
<listitem>
<simpara>
        Starts a daemon in the background.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
run
</term>
<listitem>
<simpara>
        Runs a daemon in the foreground.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
stop
</term>
<listitem>
<simpara>
        Stops the daemon running in the current working
        directory, if present.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
status
</term>
<listitem>
<simpara>
        Exits with zero status if a daemon is watching the
        current working directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__remarks">
<title>REMARKS</title>
<simpara>This daemon is a long running process used to watch a single working
directory and maintain a list of the recently changed files and
directories.  Performance of commands such as <emphasis>git status</emphasis> can be
increased if they just ask for a summary of changes to the working
directory and can avoid scanning the disk.</simpara>
<simpara>When <emphasis>core.fsmonitor</emphasis> is set to <emphasis>true</emphasis> (see <xref linkend="git-config(1)" />)
commands, such as <emphasis>git status</emphasis>, will ask the daemon for changes and
automatically start it (if necessary).</simpara>
<simpara>For more information see the "File System Monitor" section in
<xref linkend="git-update-index(1)" />.</simpara>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__caveats">
<title>CAVEATS</title>
<simpara>The fsmonitor daemon does not currently know about submodules and does
not know to filter out filesystem events that happen within a
submodule.  If fsmonitor daemon is watching a super repo and a file is
modified within the working directory of a submodule, it will report
the change (as happening against the super repo).  However, the client
will properly ignore these extra events, so performance may be affected
but it will not cause an incorrect result.</simpara>
<simpara>By default, the fsmonitor daemon refuses to work with network-mounted
repositories; this may be overridden by setting <emphasis>fsmonitor.allowRemote</emphasis> to
<emphasis>true</emphasis>. Note, however, that the fsmonitor daemon is not guaranteed to work
correctly with all network-mounted repositories, so such use is considered
experimental.</simpara>
<simpara>On Mac OS, the inter-process communication (IPC) between various Git
commands and the fsmonitor daemon is done via a Unix domain socket (UDS) -- a
special type of file -- which is supported by native Mac OS filesystems,
but not on network-mounted filesystems, NTFS, or FAT32.  Other filesystems
may or may not have the needed support; the fsmonitor daemon is not guaranteed
to work with these filesystems and such use is considered experimental.</simpara>
<simpara>By default, the socket is created in the <emphasis>.git</emphasis> directory.  However, if the
<emphasis>.git</emphasis> directory is on a network-mounted filesystem, it will instead be
created at <emphasis>$HOME/.git-fsmonitor-*</emphasis> unless <emphasis>$HOME</emphasis> itself is on a
network-mounted filesystem, in which case you must set the configuration
variable <emphasis>fsmonitor.socketDir</emphasis> to the path of a directory on a Mac OS native
filesystem in which to create the socket file.</simpara>
<simpara>If none of the above directories (<emphasis>.git</emphasis>, <emphasis>$HOME</emphasis>, or <emphasis>fsmonitor.socketDir</emphasis>)
is on a native Mac OS file filesystem the fsmonitor daemon will report an
error that will cause the daemon and the currently running command to exit.</simpara>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__configuration">
<title>CONFIGURATION</title>
<simpara>Everything below this line in this section is selectively included
from the <xref linkend="git-config(1)" /> documentation. The content is the same
as what's found there:</simpara>
<variablelist>
<varlistentry>
<term>
fsmonitor.allowRemote
</term>
<listitem>
<simpara>
    By default, the fsmonitor daemon refuses to work with network-mounted
    repositories. Setting <emphasis>fsmonitor.allowRemote</emphasis> to <emphasis>true</emphasis> overrides this
    behavior.  Only respected when <emphasis>core.fsmonitor</emphasis> is set to <emphasis>true</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
fsmonitor.socketDir
</term>
<listitem>
<simpara>
    This Mac OS-specific option, if set, specifies the directory in
    which to create the Unix domain socket used for communication
    between the fsmonitor daemon and various Git commands. The directory must
    reside on a native Mac OS filesystem.  Only respected when <emphasis>core.fsmonitor</emphasis>
    is set to <emphasis>true</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</simplesect>
<simplesect id="git-fsmonitor&#45;&#45;daemon(1)__git">
<title>GIT</title>
<simpara>Part of the <xref linkend="git(1)" /> suite</simpara>
</simplesect>
</sect2>
